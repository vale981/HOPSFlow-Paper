:PROPERTIES:
:ID:       c06111fd-d719-433d-a316-c163f6e1d384
:END:
#+PROPERTY: header-args :session otto_cycle_shift :kernel python :pandoc no :async yes :tangle tangle/cycle_shift.py :noweb yes

Having found a prototypical cycle, we now try to shift the timings to
find if there is an improvement.

* Boilerplate
#+name: boilerplate
#+begin_src jupyter-python :results none
  import plot_utils as pu
  from hiro_models.one_qubit_model import StocProcTolerances
  from hiro_models.otto_cycle import OttoEngine
  import hiro_models.model_auxiliary as aux
  import numpy as np
  import qutip as qt
  import utilities as ut
  import stocproc
  import matplotlib.pyplot as plt
  import otto_utilities as ot
  import shift_cycle as sc
  import ray
  import figsaver as fs
  ray.shutdown()

  #ray.init(address='auto')
  ray.init()
  from hops.util.logging_setup import logging_setup
  import logging
  logging_setup(logging.INFO)
#+end_src

* Baseline Model and Shifts
In here, we define the baseline model and shift the cycle.
Later we will experiment with some modifications to this baseline
cycle.

** Model Definition
**Note: Don't run this in Jupyter**
#+begin_src jupyter-python :tangle tangle/original.py :results none
  <<boilerplate>>
#+end_src

Now we need to lay down a grid size.
We start with one dimension and may add another later / dimension.
We shift so that we just overlap with coupling/decoupling and one above.
#+begin_src jupyter-python :tangle tangle/original.py
  shifts = sc.make_shifts(extra_r=4)
  shifts
#+end_src

#+RESULTS:
: array([-0.18, -0.12, -0.06,  0.  ,  0.06,  0.12,  0.18,  0.24,  0.3 ,
:         0.36,  0.42])

#+begin_src jupyter-python :tangle tangle/original.py
  import itertools
  models = [sc.make_model(shift, shift) for shift in shifts]
  baseline = models[3]
#+end_src

#+RESULTS:


#+begin_src jupyter-python
  ot.plot_cycle(baseline)
  fs.export_fig("cycle_prototype", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/fc9a5d0d4ed29593313534e3d1a1a28da016afa8.svg]]

#+begin_src jupyter-python :tangle no
  #ot.plot_cycles(models, bath=0, legend=True)
  from itertools import cycle
  lines = ["--","-.",":", "-"]
  linecycler = cycle(lines)

  fig, ax = plt.subplots()
  t = np.linspace(0, models[0].Θ, 1000)
  l, = ax.plot(t, models[0].H.operator_norm(t)/2-.5, linewidth=3, color="lightgrey")
  legend_1 = ax.legend([l], [r"$(||H||-1)/2$"], loc="center left", title="Reference")
  from cycler import cycler
  for model in models:
      ax.plot(t, model.coupling_operators[1].operator_norm(t), label=fr"${model.L_shift[0] * 100:.0f}\%$", linestyle=(next(linecycler)))
  ax.legend(title=r"Shift of $L_h$", fontsize="x-small", ncols=2)
  ax.set_xlabel(r"$\tau$")
  ax.set_ylabel(r"Operator Norm")
  ax.add_artist(legend_1)
  ax.set_xlim((0, models[0].Θ))
  fs.export_fig("cycle_shift_shifts", x_scaling=2, y_scaling=.5)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/7114f916ea0d46a3e8951acfc5664ac12f2a1b9d.svg]]

** Integrate
Here we integrate/simulate the models. This should be run on the
cluster.

Running it locally won't do any harm though.
#+begin_src jupyter-python :tangle tangle/original.py
  ot.integrate_online_multi(models, 80_000, increment=10_000, analyze_kwargs=dict(every=10_000))
#+end_src

#+RESULTS:

** Analysis
*** Baseline
This plots the full energy overview for the baseline model.
#+begin_src jupyter-python
  ot.plot_energy(baseline)
  print(
      fs.tex_value(baseline.system_energy().N,  prefix="N="),
    )

  fs.export_fig("prototype_full_energy", x_scaling=2, y_scaling=1)
#+end_src

#+RESULTS:
:RESULTS:
: \(N=80000\)
[[file:./.ob-jupyter/4e700e6b13e30f8557fcc330ee71d08ec472489d.svg]]
:END:

We would like to know how close all of this comes to the thermal states.
#+begin_src jupyter-python
  def thermal_state(T, Ω):
      ρ = np.array([[np.exp(-Ω/T), 0], [0, 1]])
      ρ /= np.sum(np.diag(ρ))

      return ρ
  import hops.util.utilities
  from hopsflow.util import EnsembleValue
  for model in [baseline]:
      with aux.get_data(model) as data:
          trace_dist_c = hops.util.utilities.trace_distance(data, relative_to=thermal_state(model.T[0], model.energy_gaps[0]))
          trace_dist_h = hops.util.utilities.trace_distance(data, relative_to=thermal_state(model.T[1], model.energy_gaps[1]))
          f, (a, aa) = plt.subplots(nrows=1, ncols=2)
          print(thermal_state(model.T[0], model.energy_gaps[0]))
          print(thermal_state(model.T[1], model.energy_gaps[1]))
          pu.plot_with_σ(model.t, EnsembleValue(trace_dist_c), ax=a, label=r"$||\rho(\tau)-\rho_c||$")
          pu.plot_with_σ(model.t, EnsembleValue(trace_dist_h), ax=a, label=r"$||\rho(\tau)-\rho_h||$")
          aa.plot(model.t, data.rho_t_accum.mean[:,0,0].real,  label=r"$\rho_{00}$")
          aa.axhline(thermal_state(model.T[1], model.energy_gaps[1])[0,0],  label=r"$\rho_{h,00}$", color="lightgray")
          aa.axhline(thermal_state(model.T[0], model.energy_gaps[0])[0,0],  label=r"$\rho_{c,00}$", color="lightgray")


          a.set_xlim(2*model.Θ, 3*model.Θ)
          aa.set_xlim(2*model.Θ, 3*model.Θ)
          a.plot(model.t, (model.H(model.t)[:, 0, 0] - 1)/2, label="$H_\mathrm{sys}$ Modulation")
          a.set_xlabel(r"$\tau$")
          aa.set_xlabel(r"$\tau$")
          #a.set_xlim(155)
          a.legend()
          aa.legend()
          aa.set_ylim((0.1,.4))
          fs.export_fig("prototype_thermalization", y_scaling=.7, x_scaling=2)
#+end_src

#+RESULTS:
:RESULTS:
#+begin_example
  [[0.11920292 0.        ]
   [0.         0.88079708]]
  [[0.37754067 0.        ]
   [0.         0.62245933]]
  /nix/store/x2w7bp64b3isjcw3ps8xsadrhxsnbpwh-python3-3.9.15-env/lib/python3.9/site-packages/matplotlib/cbook/__init__.py:1369: ComplexWarning: Casting complex values to real discards the imaginary part
    return np.asarray(x, float)
  /nix/store/x2w7bp64b3isjcw3ps8xsadrhxsnbpwh-python3-3.9.15-env/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5340: ComplexWarning: Casting complex values to real discards the imaginary part
    pts[0] = start
  /nix/store/x2w7bp64b3isjcw3ps8xsadrhxsnbpwh-python3-3.9.15-env/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5341: ComplexWarning: Casting complex values to real discards the imaginary part
    pts[N + 1] = end
  /nix/store/x2w7bp64b3isjcw3ps8xsadrhxsnbpwh-python3-3.9.15-env/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5344: ComplexWarning: Casting complex values to real discards the imaginary part
    pts[1:N+1, 1] = dep1slice
  /nix/store/x2w7bp64b3isjcw3ps8xsadrhxsnbpwh-python3-3.9.15-env/lib/python3.9/site-packages/matplotlib/axes/_axes.py:5346: ComplexWarning: Casting complex values to real discards the imaginary part
    pts[N+2:, 1] = dep2slice[::-1]
#+end_example
[[file:./.ob-jupyter/75fa2fe14d11490c47d2bf0c629822f9a03e6784.svg]]
:END:

Plotting the pauli matrix expectation values, we can see that the
dynamics only take place on the z-axis. This is addressed in [[id:9d7a11f2-f479-4e95-8775-31050bcc4fb7][Off-Axis Hamiltonian]]
#+begin_src jupyter-python
  ot.plot_bloch_components(baseline)
  fs.export_fig("state_evolution", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/746d8e3986e828734631ca1ab8a8bce243963588.svg]]

Let us plot an overview of the work done by system and interaction
modulation over a cycle for the baseline model.
#+begin_src jupyter-python
  ot.plot_steady_energy_changes([baseline], 2, label_fn=lambda _: "")
  fs.export_fig("prototype_energy_change", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/e05d323e86738a3362e6c70adc16bd5d940e5cdd.svg]]

*** Shifted Models
Let us print the power output (relative to the baseline = unshifted model) and efficiency.
#+begin_src jupyter-python
  for model in models:
    print(model.power(steady_idx=2).value / baseline.power(steady_idx=2).value, model.efficiency(steady_idx=2).value)
#+end_src

#+RESULTS:
#+begin_example
  -2.77597511693978 -2.4772877227717958
  -2.0434846540636498 -1.6243768550730728
  0.5710213861808199 0.19310160522534914
  1.0 0.3002164459369506
  1.1580729241081245 0.3201551362641393
  1.621073860181052 0.32914493962691976
  1.676329717306901 0.3155858623648209
  1.6056907132267833 0.29627949690062266
  1.4297898620293028 0.264279816138587
  0.7161356715968495 0.13903993767016806
  -1.2535087048383218 -0.29154092061712156
#+end_example


This plots the power output and efficiency as a function of sample
size to check convergence.
#+begin_src jupyter-python
  ot.plot_power_eff_convergence(models)
  fs.export_fig("cycle_shift_convergence", x_scaling=2, y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/c671a1b46de1f5b65905925fb69604e13a924e19.svg]]

We see that we get a pretty good picture after about 30k-40k samples.

This is an overview over powers and the efficiency.
#+begin_src jupyter-python
  ot.plot_powers_and_efficiencies(np.array(shifts) * 100, models, xlabel="Cycle Shift")
  fs.export_fig("cycle_shift_power_efficiency", y_scaling=.7, x_scaling=1)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/c134d0ea85b5900cc5fc809ee73e68d332d429d6.svg]]

The best shift:
#+begin_src jupyter-python
  best_shift = shifts[np.argmax([-model.power(steady_idx=2).value for model in models])]
  best_shift_model = sc.make_model(best_shift, best_shift)
  best_shift
#+end_src

#+RESULTS:
: 0.18

This contrasts the system/interaction power output for the baseline
and the best shift model.
#+begin_src jupyter-python
  fig, ax =ot.plot_steady_energy_changes([baseline, best_shift_model], 2, label_fn=lambda m: ("baseline" if m.hexhash == baseline.hexhash else "shifted"))
  ax.legend(loc="lower left")
  fs.export_fig("shift_energy_change", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/f7afc8eb774b72b6f9a3080a0884226164759391.svg]]


Let us plot the interaction power in the steady state for baseline and
best-shift. We have to shift the time to make them overlap correctly.
#+begin_src jupyter-python
  t_shift_begin = (2 - best_shift) * baseline.Θ
  t_begin = 2 * baseline.Θ
  t_shift_end = (3 - best_shift) * baseline.Θ
  final_period_idx = np.argmin(abs(baseline.t - t_begin))
  final_period_shifted = np.argmin(abs(baseline.t - t_shift_begin))
  final_period_shifted_end = final_period_shifted - final_period_idx

  t_baseline = baseline.t[final_period_shifted:final_period_shifted_end]
  t_final_period = baseline.t[final_period_idx:]
  t_plot = baseline.t[: len(t_baseline)]
  interaction_change_baseline_cold = (
      baseline.interaction_power()
      .for_bath(0)
      .slice(slice(final_period_shifted, final_period_shifted_end))
      .value
  )
  interaction_change_best_cold = (
      best_shift_model.interaction_power()
      .for_bath(0)
      .slice(slice(final_period_idx, len(baseline.t)))
      .value
  )
  interaction_change_baseline_hot = (
      baseline.interaction_power()
      .for_bath(1)
      .slice(slice(final_period_shifted, final_period_shifted_end))
      .value
  )
  interaction_change_best_hot = (
      best_shift_model.interaction_power()
      .for_bath(1)
      .slice(slice(final_period_idx, len(baseline.t)))
      .value
  )


  fig, ax = plt.subplots()
  ax.plot(t_plot, interaction_change_baseline_cold, label="baseline")
  ax.plot(t_plot, interaction_change_best_cold, label="shifted")
  ax.plot(t_plot, interaction_change_baseline_hot, linestyle="--", color="C0")
  ax.plot(t_plot, interaction_change_best_hot, linestyle="--", color="C1")
  ax.legend()
  ax.set_xlabel(r"$\tau$")
  ax.set_ylabel(r"$P_{\mathrm{int}}$")
  fs.export_fig("shift_power", y_scaling=0.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/3e6540b6d222f368a38f57540b7c70c5758f5b99.svg]]


Let us zoom in on the cold bath decoupling process to understnad this better.
#+begin_src jupyter-python
  f, a = plt.subplots()
  a.axhline(best_shift_model.system_energy().value[np.argmin(abs(best_shift_model.t - model.Θ * 2))], color="gray", linestyle="--")
  r = pu.plot_with_σ(
      best_shift_model.t, best_shift_model.interaction_energy().for_bath(0), ax=a,
      label=r"$\langle H_\mathrm{inter}\rangle$"
  )
  pu.plot_with_σ(
      best_shift_model.t, best_shift_model.system_energy(), ax=a, label=r"$\langle H_\mathrm{sys}\rangle$"
  )
  # a.plot(best_shift_model.t, best_shift_model.H(best_shift_model.t)[:, 0,0])
  a.plot(
      best_shift_model.t,
      best_shift_model.coupling_operators[0].operator_norm(best_shift_model.t) / 5,
      label="cold bath modulation",
  )

  # a.plot(
  #     best_shift_model.t,
  #     best_shift_model.coupling_operators[1].operator_norm(best_shift_model.t) / 5,
  #     label="hot bath modulation",
  # )
  a.plot(
      best_shift_model.t, best_shift_model.system.operator_norm(best_shift_model.t) / 5,
      label="system modulation"
  )
  # a.plot(best_shift_model.t, best_shift_model.coupling_operators[1].operator_norm(best_shift_model.t) / 5)
  a.set_xlim((model.Θ * 2, model.Θ * 2 + 11))

  a.set_ylim((-.21, .45))
  a.set_xlabel(r"$\tau$")
  a.legend(loc="upper right", fontsize="x-small")
  fs.export_fig("cold_bath_decoupling", y_scaling=.6)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/089f655a55a69cbc238eda6899340662091d2ca0.svg]]


* Slower switching
Let us explore what happens when modulate the coupling a bit slower
switch slower.

** Model Construction
#+begin_src jupyter-python :tangle tangle/long.py
  <<boilerplate>>
#+end_src

#+RESULTS:

#+begin_src jupyter-python :tangle tangle/long.py
  shifts = sc.make_shifts(extra_r=4)

  long_models = [sc.make_model(shift, shift, switch_t=6.) for shift in shifts]
  long_baseline = sc.make_model(0., 0., switch_t=6.)
#+end_src

#+RESULTS:

#+begin_src jupyter-python :tangle no
  fig, ax = plt.subplots()
  t = np.linspace(0, models[0].Θ, 1000)
  ax.plot(t, models[3].coupling_operators[0].operator_norm(t), color="C1", linewidth=1, label="Fast Switching")
  ax.plot(t, models[3].coupling_operators[1].operator_norm(t), color="C1", linestyle="--", linewidth=1)
  ax.plot(t, long_models[3].coupling_operators[0].operator_norm(t), color="C2", linewidth=1, label="Slow Switching")
  ax.plot(t, long_models[3].coupling_operators[1].operator_norm(t), color="C2", linestyle="--", linewidth=1)

  ax.set_xlabel(r"$\tau$")
  ax.set_ylabel(r"$||L_{h/c}||$")
  ax.legend()
  #fs.export_fig("cycle_shift_shift_vs_overlap", y_scaling=.6)
  #ot.plot_cycles(all_overlap_models[0:2], legend=True)
#+end_src

#+RESULTS:
:RESULTS:
: <matplotlib.legend.Legend at 0x7f5da18c38e0>
[[file:./.ob-jupyter/b77a8b40f7c3265be026db00a76524da7bff95c4.svg]]
:END:



** Integration
#+begin_src jupyter-python :tangle tangle/long.py
  ot.integrate_online_multi(long_models, 80_000, increment=10_000, analyze_kwargs=dict(every=10_000))
#+end_src

#+RESULTS:
** Anaylysis
Let us look at power and efficiency.
#+begin_src jupyter-python
  for shift, model in zip(shifts, long_models):
      print(
          shift, best_shift,
          model.power(steady_idx=2).N,
          model.power(steady_idx=2).value / long_baseline.power(steady_idx=2).value,
          (model.efficiency(steady_idx=2).value - long_baseline.efficiency(steady_idx=2).value) * 100,
          (model.efficiency(steady_idx=2).value, long_baseline.efficiency(steady_idx=2).value),
      )
#+end_src

#+RESULTS:
#+begin_example
  -0.18 0.18 80000 -0.7534604455561659 -108.77944601456684 (-0.6547883379568094, 0.4330061221888589)
  -0.12 0.18 80000 0.5591648896822077 -14.974955411404467 (0.28325656807481425, 0.4330061221888589)
  -0.06 0.18 80000 0.9985149794296736 0.0037407432686098474 (0.433043529621545, 0.4330061221888589)
  0.0 0.18 80000 1.0 0.0 (0.4330061221888589, 0.4330061221888589)
  0.06 0.18 80000 0.991206944683175 0.23007686496274715 (0.4353068908384864, 0.4330061221888589)
  0.12 0.18 80000 1.1339755806282883 0.3265587668820624 (0.43627170985767955, 0.4330061221888589)
  0.18 0.18 80000 1.297675283650504 -2.9821368425732797 (0.4031847537631261, 0.4330061221888589)
  0.24 0.18 80000 1.2031272812376834 -7.638926235390614 (0.3566168598349528, 0.4330061221888589)
  0.3 0.18 80000 0.7381994151953918 -20.86521478070438 (0.22435397438181512, 0.4330061221888589)
  0.36 0.18 80000 -0.45819153140116126 -60.284418918547836 (-0.16983806699661946, 0.4330061221888589)
  0.42 0.18 80000 -1.4846084056353754 -118.88415735590576 (-0.7558354513701987, 0.4330061221888589)
#+end_example

Here, we contrast the slow/fast coupling modulation protocols.
#+begin_src jupyter-python
  fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)
  _, ax1_right = ot.plot_powers_and_efficiencies(np.array(shifts) * 100, models, xlabel="Cycle Shift", ax=ax1)[2]
  _, ax2_right = ot.plot_powers_and_efficiencies(np.array(shifts) * 100, long_models, xlabel="Cycle Shift", ax=ax2)[2]

  ax1_right.sharey(ax2_right)
  ax1.sharey(ax2)

  ax1.set_title("Fast Coupling")
  ax2.set_title("Slow Coupling")
  fs.export_fig("cycle_shift_power_efficiency_with_slower", y_scaling=.7, x_scaling=2)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/d874adc97bcc335737347c1205a48c7b39561198.svg]]

Aho! The trick is just to slow down the coupling switching.

I know, horrible code. I just wan't to finish this...
#+begin_src jupyter-python
  best_long_idx = np.argmax([-model.power(steady_idx=2).value for model in long_models])
  best_long_shift = shifts[best_long_idx]
  best_long_shift_model = long_models[best_long_idx]
  best_long_shift
#+end_src

#+RESULTS:
: 0.18


Let's contrast the energy change dynamics in slow vs fast modulation
#+begin_src jupyter-python
  fig, ax =ot.plot_steady_energy_changes([best_long_shift_model, best_shift_model], 2, label_fn=lambda m: ("long" if m.hexhash == best_long_shift_model.hexhash else "short"))
  ax.legend(loc="lower left")

  fs.export_fig("long_short_energy_change", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/5418d985119098ea7dd34a612cee7193d550431c.svg]]

Now let's try to find out why the efficiency improved.

#+begin_src jupyter-python
  best_long_model = long_models[5]

  flow_long = -1*best_long_model.bath_energy_flow().for_bath(0)
  power_long = best_long_model.interaction_power().for_bath(0)

  flow_short = -1*best_shift_model.bath_energy_flow().for_bath(0)
  power_short = best_shift_model.interaction_power().for_bath(0)

  plt.plot(best_shift_model.t, flow_short.value, label="fast coupling")
  plt.plot(best_shift_model.t, flow_long.value, label="slow coupling")
  plt.plot(best_shift_model.t, power_short.value, linestyle="--", color="C0")
  plt.plot(best_shift_model.t, power_long.value, linestyle="--",  color="C1")
  plt.xlim((2*best_long_model.Θ-5, 2*best_long_model.Θ+12))
  plt.ylim((-.015,.06))
  plt.legend()
  plt.xlabel(r"$\tau$")
  fs.export_fig("cold_bath_flow", y_scaling=.7)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/9cecea40e225eaae34f9003fdf7e004ea0463e84.svg]]
Way less energy is dumped into the cold bath.
#+begin_src jupyter-python
  t, rel_short_cold = ot.val_relative_to_steady(
      best_shift_model,
      best_shift_model.bath_energy().for_bath(0),
      2,
      1-best_shift_model.L_shift[0]
  )

  t, rel_short_hot = ot.val_relative_to_steady(
      best_shift_model,
      best_shift_model.bath_energy().for_bath(1),
      2,
      1-best_shift_model.L_shift[0]
  )

  t, rel_long_cold = ot.val_relative_to_steady(
      best_long_model,
      best_long_model.bath_energy().for_bath(0),
      2,
      (1-best_long_model.L_shift[0])
  )
  t, rel_long_hot = ot.val_relative_to_steady(
      best_long_model,
      best_long_model.bath_energy().for_bath(1),
      2,
      (1-best_long_model.L_shift[0])
  )
  # plt.plot(t, -(rel_long_cold).value, label="slow coupling")
  # plt.plot(t, -(rel_long_hot).value, label="slow coupling")
  # plt.plot(t, best_long_model.coupling_operators[1].operator_norm(t), label="slow coupling")

  plt.plot(t, -(rel_long_cold/rel_long_hot).value, label="slow coupling")
  plt.plot(t, -(rel_short_cold/rel_short_hot).value, label="fast coupling")
  plt.plot(t, best_long_model.coupling_operators[0].operator_norm(t), color="C0", linestyle="dashed")
  plt.plot(t, best_shift_model.coupling_operators[0].operator_norm(t), color="C1", linestyle="dashed")

  plt.ylim((-.1,.75))
  plt.xlim((100, 128))
  plt.legend()
  plt.xlabel(r"$\tau$")
  plt.ylabel(r"$-\Delta \langle{H_{\mathrm{B},c}}\rangle/\Delta \langle{H_{\mathrm{B},h}}\rangle$")
  fs.export_fig("hot_vs_cold_bath", y_scaling=.7)
#+end_src

#+RESULTS:
:RESULTS:
: /home/hiro/src/hopsflow/hopsflow/util.py:331: RuntimeWarning: divide by zero encountered in divide
:   left_i[1] / right_i[1],
: /home/hiro/src/hopsflow/hopsflow/util.py:331: RuntimeWarning: invalid value encountered in divide
:   left_i[1] / right_i[1],
: /home/hiro/src/hopsflow/hopsflow/util.py:333: RuntimeWarning: divide by zero encountered in divide
:   (left_i[2] / right_i[1]) ** 2
: /home/hiro/src/hopsflow/hopsflow/util.py:334: RuntimeWarning: divide by zero encountered in divide
:   + (left_i[1] / (right_i[1]) ** 2 * right_i[2]) ** 2
: /home/hiro/src/hopsflow/hopsflow/util.py:334: RuntimeWarning: invalid value encountered in divide
:   + (left_i[1] / (right_i[1]) ** 2 * right_i[2]) ** 2
[[file:./.ob-jupyter/8cc13fa6fb6a9a90c4d74df045df24daeb3632cb.svg]]
:END:

* Slower switching + Only Cold Bath Coupling Shifted
Let's see what happens if we only shift the coupling to the cold bath.
The last section gave me the hunch, that only this shift matters.

*** Model def and intergration
#+begin_src jupyter-python :tangle tangle/only_cold.py :results none
  <<boilerplate>>
#+end_src


#+begin_src jupyter-python :results none :tangle tangle/only_cold.py
  shifts = sc.make_shifts(extra_r=4)
  cold_models = [sc.make_model(shift, shift, switch_t=6., only_cold=True) for shift in shifts]
#+end_src

#+begin_src jupyter-python :tangle tangle/only_cold.py
  ot.integrate_online_multi(cold_models, 1, increment=1, analyze_kwargs=dict(every=10_000))
#+end_src

#+begin_src jupyter-julia
  aux.import_results(other_data_path="taurus/.data", other_results_path="taurus/results", models_to_import=cold_models)
#+end_src

#+RESULTS:
#+begin_example
  [INFO    root                      18669] Skipping b05446a4d349d3dc0a69a7a44affc2876f07d0cb964e26a48db1d34a5eabc0b9.
  [INFO    root                      18669] Skipping c76f580d0b1ffe427087a52af3ca33fee3c2e43edd4e8bdb144eb966e2090572.
  [INFO    root                      18669] Skipping f7e312e39019400e3fcd54b1a27c7af544455f30dda398cede314be7c15605ae.
  [INFO    root                      18669] Skipping de7eef8967925e6fb09ed542f3d720ee25d6403beede20a4a9a1d480f10ad57b.
  [INFO    root                      18669] Skipping dd3f4f099a70356c0d0887af79f84c7a95c9509ae4d1fa489b8fce2dbea18ec9.
  [INFO    root                      18669] Skipping 39a0bb585dfb2ebf6436a4968e21c52ee1f38e9cd50973184b9cb33ffa39dea6.
  [INFO    root                      18669] Skipping 1bc5695f1454d8f6684c52a55cd633ebd4958eb852fb30f018170b3fdc97f614.
  [INFO    root                      18669] Skipping e027c1dcb06971275f06fd7512bbb14441fe0aed619aaf5be4dcf31e1f435083.
  [INFO    root                      18669] Skipping 3ddbe4cb5d72f6213a2ed9a17f44a3baf5c3526a4a076b666ab422b359d3b8fd.
  [INFO    root                      18669] Skipping 7cac0199140ff8f9fb2e0073b950e079e582466b8a6aea99f286d5d81b62cad8.
  [INFO    root                      18669] Skipping e5b39af5f44f26550adedd55bd23583dcefac4f67b88c3d2892f03563900f8fd.
  [INFO    root                      18669] Skipping 9a60e106d3fc8e3b71721be3b4629d871bdb2b0dfc4ae5cdabfc30dd51d02db5.
  [INFO    root                      18669] Skipping 891fdc8c533ec0736bbf6bdde377c99f7824ba5b0ad328be6e7083a3d4f12678.
  [INFO    root                      18669] Skipping abe7b4314386941d0913ffb64ee0ad59bb0c1be62b5f56cfaae965b955d16686.
  [INFO    root                      18669] Skipping 7d1434769d5f44d7dd611430d3974eeb675d6a00e02bde4dd0c32fb34827ea54.
  [INFO    root                      18669] Skipping 8b5e60297f93b8e77fae00d86b07621aa4aa66367404cfe15b04c145778c1a80.
  [INFO    root                      18669] Skipping 586c5a0355f66a85ed09281931b8fcfc7c283e73f7d6440252d02f160186ceec.
  [INFO    root                      18669] Skipping cfad63977aad412a4d035ea4122d748504bc638b4df70749bf6a9f0a0ecbcf4b.
  [INFO    root                      18669] Skipping 5246668cb8f908e4b4ebf125167c55e8e2e239c4a4b4d1119d30cc4db4339815.
  [INFO    root                      18669] Skipping 3b7ca29c512453d9a7edac46f40b3aaaa6e08622cf57ac0e30def3cb8f7f0eed.
  [INFO    root                      18669] Skipping 5f81eec546a7aeb8b0721dde139a38de00422500a5f48c987bc485dd542a40e6.
  [INFO    root                      18669] Skipping 634357aeae7ae179438dfdcdcb1bfc3fa1fee9f09c1f91928a5cab21affd14a8.
  [INFO    root                      18669] Skipping b8df6a7c8e7b196a20fb22bd53497aef48260b605831439feab8c76c14edb9f4.
  [INFO    root                      18669] Skipping a6ee3dbf94afda02f8dbde095e3cf63c0daac8552eb018f4edd15c43de703a0a.
  [INFO    root                      18669] Skipping 443531c8c81136c8345f7d362d19c66ed09e578bc715b2abd49cf31f21ae01bd.
  [INFO    root                      18669] Skipping 2e5e3febeffbfa79aa5f85e4a75d725275ca55163aaea81fb7a266ab5eb1820d.
  [INFO    root                      18669] Skipping e938456955f7ed0fdbfa6ac6ffd85a484eae2ffb8cc33017ee1e207ab356bc09.
  [INFO    root                      18669] Skipping 932e4091f4c6604017cafdd80412639f59ed7a4b71b036aafdb7e1bd3aa79071.
  [INFO    root                      18669] Skipping 3cfac01aae7bfa3974096efb73eafaeaa6dcf75848ed6d0dc9ce9174be8bc32f.
  [INFO    root                      18669] Skipping aa6f7c208759a151d2e37dd5f43dc26bb56b971168bd81e70e501e9ed3b611b0.
  [INFO    root                      18669] Skipping 3818bc0e971ff867e05708b90a6f44488caaa383f3ed286205757d358a08ef58.
  [INFO    root                      18669] Skipping 5547498a828a507d2023ae3f30e478dc3d05fdce0d5f085157b074ade8dbc6c8.
  [INFO    root                      18669] Skipping b666793171ffe0a006adb1e5c7adae7bb02136a455e1b8e46e41b03773993e1a.
  [INFO    root                      18669] Not importing ce0913ebbcdbe3adfd693b9cad66c06c43a943272068f46ca1b8e12fd4581119.
  [INFO    root                      18669] Not importing fb5094e0693ce460ba63d2374e8c5f7852dbdfd4487a0ea393a3088bfd3c4117.
  [INFO    root                      18669] Not importing 84ce4409ca0d9e6fce328c2bdb0fe931cef2ad6b76311488d58fc74029b04bb7.
  [INFO    root                      18669] Not importing 2f2c1b910ad4e7a706dd2b2b1ced68375356c69964c57b256818558dd067d008.
  [INFO    root                      18669] Not importing 26ee5023b7589d901c41037537bdab89154b395927af2a3ed6bf8c472d7625c4.
  [INFO    root                      18669] Not importing 5d118bc5b64eb105ed45c825742f9241f81efa681dc7f6095b7d27ab6b96c284.
  [INFO    root                      18669] Not importing 7c7fed9fd4ff2ecfeb9a1013c58e3a402deb966068f7a2e97aa55f1008088731.
  [INFO    root                      18669] Not importing 84ff43949573f3b0abed26950782793b605a85dee7df40b86963ecc5873bf747.
  [INFO    root                      18669] Not importing 36a2ffb10a838af7fb97670a69866c682282a058d20913f37c98043351bb83a2.
  [INFO    root                      18669] Skipping e87e6ed047bb6e2b589374542556d6f22b9cfe04939db4c657fbd76bd1305394.
  [INFO    root                      18669] Skipping 3031942ac59f6098d27f4312de139565543dfa97f5aed457dfb0d80cefc41c9b.
  [INFO    root                      18669] Skipping 0079a4c20543824a40a98912580968424e9cf182634960ff37973c3b01d65433.
  [INFO    root                      18669] Skipping f72a3b93aca01363f1029255be581618eed90fa6b607e96f98178d336e3506ff.
  [WARNING root                      18669] Importing taurus/.data/a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f/_b/a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_b5106778b26241a26c10be1488e24172_1.h5 to .data/a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f/_b/a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_b5106778b26241a26c10be1488e24172_1.h5.
  [WARNING root                      18669] The model description is 'Classic Cycle'.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_10000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_50000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_20000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_30000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_80000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_40000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_70000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/flow_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_40000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_10000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_30000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_70000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_80000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_20000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_50000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_70000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_30000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_80000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_40000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_20000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_10000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/interaction_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_50000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_40000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_60000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_50000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_10000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_20000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_80000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_70000.npz.
  [WARNING root                      18669] Importing taurus/results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_30000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_60000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_50000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_20000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_30000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_40000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_10000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_70000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f.npz to results/system_power_a86b8a23ecd962904a2008808f85b00b9c337e36dc6bebe3b806343510f0ec7f_80000.npz.
  [WARNING root                      18669] Importing taurus/.data/ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454/_5/ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_57ce0945dd8dfa165278d59ed17b5666_1.h5 to .data/ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454/_5/ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_57ce0945dd8dfa165278d59ed17b5666_1.h5.
  [WARNING root                      18669] The model description is 'Classic Cycle'.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_30000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_70000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_20000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_40000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_50000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_10000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_80000.npz.
  [WARNING root                      18669] Importing taurus/results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/flow_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_30000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_70000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_40000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_10000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_20000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_50000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_80000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_10000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_30000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_70000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_20000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_60000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_40000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_50000.npz.
  [WARNING root                      18669] Importing taurus/results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/interaction_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_80000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_80000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_30000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_10000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_70000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_40000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_60000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_20000.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz.
  [WARNING root                      18669] Importing taurus/results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_50000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_30000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_20000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_70000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_50000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_40000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_60000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_80000.npz.
  [WARNING root                      18669] Importing taurus/results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454.npz to results/system_power_ca94f36cbacd1b29d6e4f3cf384624ef0f4930ef3b0f12b09179efb17e327454_10000.npz.
#+end_example

*** Cycle showcase
#+begin_src jupyter-python :tangle no
  fig, ax = plt.subplots()
  t = np.linspace(0, cold_models[0].Θ, 1000)
  ax.plot(t, long_models[-3].coupling_operators[0].operator_norm(t), color="C1", linewidth=1, label="both shifted")
  ax.plot(t, long_models[-3].coupling_operators[1].operator_norm(t), color="C1", linestyle="--", linewidth=1)
  ax.plot(t, cold_models[-3].coupling_operators[0].operator_norm(t), color="C2", linewidth=1, linestyle="dotted", label="only cold shifted")
  ax.plot(t, cold_models[-3].coupling_operators[1].operator_norm(t), color="C2", linestyle="--", linewidth=1)
  ax.plot(t, (cold_models[-3].system.operator_norm(t)-1)/2, color="lightgrey", linestyle="--", linewidth=1)

  ax.set_xlabel(r"$\tau$")
  ax.set_ylabel(r"$||L_{h/c}||$")
  ax.legend()
  fs.export_fig("cycle_shift_cold_shift", y_scaling=.6)
  #ot.plot_cycles(all_overlap_models[0:2], legend=True)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/452910da5da1d556764e6b6d81e8c15cd2ce5a67.svg]]


#+begin_src jupyter-python
  from itertools import cycle
  lines = ["--","-.",":", "-"]
  linecycler = cycle(lines)
  fig, ax = plt.subplots()
  t = np.linspace(0, models[0].Θ, 1000)
  #l, = ax.plot(t, models[0].H.operator_norm(t)/2-.5, linewidth=3, color="lightgrey")
  l, = ax.plot(t, cold_models[3].coupling_operators[1].operator_norm(t), linewidth=3, color="lightgrey")
  legend_1 = ax.legend([l], [r"$(||H||-1)/2$"], loc="center left", title="Reference")
  from cycler import cycler
  for model in cold_models:
      ax.plot(t, model.coupling_operators[0].operator_norm(t), label=fr"${model.L_shift[0] * 100:.0f}\%$", linestyle=(next(linecycler)))
  ax.legend(title=r"Shift of $L_h$", fontsize="x-small", ncols=2)
  ax.set_xlabel(r"$\tau$")
  ax.set_ylabel(r"Operator Norm")
  ax.add_artist(legend_1)
  ax.set_xlim((0, models[0].Θ))
#+end_src

#+RESULTS:
:RESULTS:
| 0.0 | 60.0 |
[[file:./.ob-jupyter/3a99f0725ec23cdfff1c58405c0167881a0648d8.svg]]
:END:

*** Anaysis
Let's contrast all three protocols.
#+begin_src jupyter-python
  fig, (ax2, ax1, ax3) = plt.subplots(nrows=1, ncols=3)
  _, ax1_right = ot.plot_powers_and_efficiencies(np.array(shifts) * 100, cold_models, xlabel="Cycle Shift", ax=ax1)[2]
  _, ax2_right = ot.plot_powers_and_efficiencies(np.array(shifts) * 100, long_models, xlabel="Cycle Shift", ax=ax2)[2]
  _, ax3_right = ot.plot_powers_and_efficiencies(np.array(shifts) * 100, models, xlabel="Cycle Shift", ax=ax3)[2]

  ax1_right.sharey(ax2_right)
  ax1.sharey(ax2)

  ax3_right.sharey(ax1_right)
  ax3.sharey(ax1)

  ax1.set_title("Cold Shifted")
  ax2.set_title("Both Shifted")
  ax3.set_title("Fast Modulation")
  fs.export_fig("cycle_shift_power_efficiency_longer_vs_only_cold", y_scaling=.7, x_scaling=2.5)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/bdb51a4a3f8c24984da621312c2898b079ee8d55.svg]]

And do it again, but in a more convenient format.
#+begin_src jupyter-python
  ot.plot_multi_powers_and_efficiencies(shifts, [models, long_models, cold_models], ["shifted", "shifted + slower modulation", "slower + only cold shifted"], xlabel=r"Shift $\delta$")
  fs.export_fig("shift_comparison", y_scaling=1, x_scaling=2)
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/31768eb7041b22ce745ca08564de4479c81b662b.svg]]

* Findings
- coupling overlap doesn't help much
- with these parameters the earlier obeservation does not recur
- more scan needed
- maybe slower coupling/decoupling will help

* Off-Axis Hamiltonian
:PROPERTIES:
:ID:       9d7a11f2-f479-4e95-8775-31050bcc4fb7
:END:
Let us brieofly demonstrate the effects of rotating the system
hamiltonian.

** Construction
#+begin_src jupyter-python :tangle tangle/off_axis.py :results none
  <<boilerplate>>
#+end_src

#+begin_src jupyter-python :tangle tangle/off_axis.py
  off_ax_models = []
  weights = [.3, .6]
  param_iter = lambda: itertools.product([3, 6], weights)
  for switch_t, weight in param_iter():
      off_ax = sc.make_model(0, 0, switch_t=switch_t)
      off_ax.H_0  = 1 / 2 * (qt.sigmaz().full() + np.eye(2) + weight * qt.sigmax().full())
      # NOTE: the hamiltonians will be normalzed so that their smallest EV is 0 and the largest one is 1

      off_ax.H_1  = off_ax.H_0.copy()

      off_ax_models.append(off_ax)
#+end_src

#+RESULTS:

** Integration
#+begin_src jupyter-python :tangle tangle/off_axis.py
  ot.integrate_online_multi(off_ax_models, 10, increment=10, analyze_kwargs=dict(every=10_000))
#+end_src

#+begin_src jupyter-python
  aux.import_results(other_data_path="taurus/.data_oa", other_results_path="taurus/results")
#+end_src

** Analysis
Let's plot the pauli expectation values.
#+begin_src jupyter-python
  for (i, model), weight in zip(enumerate(off_ax_models), weights):
      f, a = ot.plot_bloch_components(model)
      #ot.plot_bloch_components(off_ax_models[i+2], ax=a, linestyle="--", label=None)

      a.set_title(rf"$r_y={weight}$")
      fs.export_fig(f"bloch_expectation_offaxis_{weight}", y_scaling=.7)
#+end_src

#+RESULTS:
:RESULTS:
[[file:./.ob-jupyter/216aad96418805e8cbb925e939bb261bdb09c332.svg]]
[[file:./.ob-jupyter/ed2cd60a871ccc8b23781492e0b98084bae04018.svg]]
:END:

#+begin_src jupyter-python
  np.array(weights) / np.sqrt(1 + np.array(weights) ** 2)
#+end_src

#+RESULTS:
: array([0.28734789, 0.51449576])


#+begin_src jupyter-python
  baselines = [baseline] * 2 + [long_baseline] * 2
  for model, ref in zip(off_ax_models, baselines):
      print(model.power(steady_idx=2).value / ref.power(steady_idx=2).value, model.efficiency(steady_idx=2).value / ref.efficiency(steady_idx=2).value)
#+end_src

#+RESULTS:
: 1.0868612980640593 1.0437773131214951
: 1.1468800706147944 0.9438835472008851
: 1.070328051487702 0.9917819857660193
: 1.1178966202334308 0.958371868191535

Interestingly, even with the too-fast switching we have greater power, and greater efficiency.

#+begin_src jupyter-python
  for (i, model), weight in zip(enumerate(off_ax_models), weights):
      f, a = ot.plot_energy(model)
      a.set_title(rf"$r_y={weight}$")
      fs.export_fig(f"full_energy_offaxis_{weight}", x_scaling=2, y_scaling=1)
#+end_src

#+RESULTS:
:RESULTS:
[[file:./.ob-jupyter/48801c84dacb82ca9d37f0af0519727e298ec1fd.svg]]
[[file:./.ob-jupyter/0ef615f736de27bf2129d27452b3f55fb30ff82e.svg]]
:END:


* Rotating Hamiltonian
Let us brieofly demonstrate the effects of rotating the system
hamiltonian.

** Construction
#+begin_src jupyter-python :tangle tangle/rot.py :results none
  <<boilerplate>>
  import itertools
  from hops.util.dynamic_matrix import ConstantMatrix
#+end_src

#+begin_src jupyter-python :tangle tangle/rot.py
  rot_models = []
  weights = [.3, .6]
  for weight in weights:
      off_ax = sc.make_model(0, 0)
      off_ax.H_bias = ConstantMatrix(.3 / 2 * qt.sigmax().full())
      rot_models.append(off_ax)
#+end_src

#+RESULTS:

#+begin_src jupyter-python
  τs = rot_models[0].t
  #plt.plot(τs, np.einsum('tij,ij->t', rot_models[0].H(τs), qt.sigmay().full()).real)
  plt.plot(τs, abs(rot_models[0].H(τs)[:, 0, 0]))
  plt.plot(τs, abs(rot_models[0].H(τs)[:, 0, 1]))
#+end_src

#+RESULTS:
:RESULTS:
: ConstantMatrix(array([[0. +0.j, 0.15+0.j], [0.15+0.j, 0. +0.j]]))
: ConstantMatrix(array([[0. +0.j, 0.15+0.j], [0.15+0.j, 0. +0.j]]))
| <matplotlib.lines.Line2D | at | 0x7f12bfd809a0> |
[[file:./.ob-jupyter/d0d95f8d7e00f7a9dda3749f2a14973988e6887b.svg]]
:END:

** Integration
#+begin_src jupyter-python :tangle tangle/rot.py
  ot.integrate_online_multi(rot_models, 80_000, increment=10_000, analyze_kwargs=dict(every=10_000))
#+end_src

#+begin_src jupyter-python
  aux.import_results(other_data_path="taurus/.data_oa", other_results_path="taurus/results")
#+end_src
